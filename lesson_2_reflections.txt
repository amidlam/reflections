What happens when you initialize a repository? Why do you need to do it?
	
	git creates the hidden file .git in the directory where git init was run
	
	files are hidden to protect file integrity that donâ€™t need direct access

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	staging area is a collection of pointers to selected files that exist in the 
	working directory that have not been committed to the repository
	
	allows grouping of files of similar logical change or branches

How can you use the staging area to make sure you have one commit per logical
change?

	add file or files that represent the logical change to staging area then 
	commit them with comments

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	branching allows trying experimental features, language variations, 
	alternative versions without disrupting the master branch

How do the diagrams help you visualize the branch structure?
	
	it is a linked list of nodes with a pointer back to the parent, each node 
	can have multiple offspring or branching, the list can be traveled backwards 
	by visiting each parent

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	merging produces one linked list by time stamp with two parents


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	pros quick cons conflicts handled manually vs pros total user control 
	cons time consuming 